# Usage of Arithmetic Operations in Python
# The current volume of a water reservoir (in cubic metres)
reservoir_volume = 4.445e8
# The amount of rainfall from a storm (in cubic metres)
rainfall = 5e6
# decrease the rainfall variable by 10% to account for runoff
rainfall *= .9
# add the rainfall variable to the reservoir_volume variable
reservoir_volume+=rainfall
# increase reservoir_volume by 5% to account for stormwater that flows
# into the reservoir in the days following the storm
reservoir_volume *=1.05
# decrease reservoir_volume by 5% to account for evaporation
reservoir_volume *=.95 
# subtract 2.5e5 cubic metres from reservoir_volume to account for water
# that's piped to arid regions.
reservoir_volume = reservoir_volume-2.5e5
# print the new value of the reservoir_volume variable
print (reservoir_volume)


----------------------
# More operations
sf_population, sf_area = 864816, 231.89
rio_population, rio_area = 6453682, 486.5

san_francisco_pop_density = sf_population/sf_area
rio_de_janeiro_pop_density = rio_population/rio_area

# Write code that prints True if San Francisco is denser than Rio, and False otherwise
print (san_francisco_pop_density > rio_de_janeiro_pop_density)
--------------------
# String Operations
username = "Kinari"
timestamp = "04:50"
url = "http://petshop.com/pets/mammals/cats"

# TODO: print a log message using the variables above.
# The message should have the same format as this one:
# "Yogesh accessed the site http://petshop.com/pets/reptiles/pythons at 16:20."
print (username + " accessed the site "+url + " at " + timestamp + ".")


-----------------
# String functions (len) , concateration
given_name = "William"
middle_names = "Bradley"
family_name = "Pitt"
full_name = given_name + " " + middle_names + " "+ family_name
print (full_name)
name_length =  len(given_name + " " + middle_names + " "+ family_name)
print (name_length)
# Now we check to make sure that the name fits within the driving license character limit
# Nothing you need to do here
driving_license_character_limit = 28
print(name_length <= driving_license_character_limit)

---------------
# Print using Format statement
# Write two lines of code below, each assigning a value to a variable
first ="First"
last ="Last"
# Now write a print statement using .format() to print out a sentence and the 
#   values of both of the variables
print ("These are the {} and {} names".format(first, last))

-----------------
# More string functions 

verse = "If you can keep your head when all about you\n  Are losing theirs and blaming it on you,\nIf you can trust yourself when all men doubt you,\n  But make allowance for their doubting too;\nIf you can wait and not be tired by waiting,\n  Or being lied about, don’t deal in lies,\nOr being hated, don’t give way to hating,\n  And yet don’t look too good, nor talk too wise:"
print(verse)
print(len(verse))
first_occurance=verse.find('and')
print("the index of the {} occurrence of the word \'{}\' in verse is {}".format('first','and',first_occurance))
last_occurance=verse.rfind('you')
print (last_occurance)
repeat_of_you =verse.count('you')
print("the number of times the word {} repeats in the verse is {}".format('you',repeat_of_you))

# Use the appropriate functions and methods to answer the questions above
# Bonus: practice using .format() to output your answers in descriptive messages!
----------------------




---
